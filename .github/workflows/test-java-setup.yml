name: test-java-setup

on:
  push:
    branches: ["feature/issue-form"]
  #  pull_request:
  #    branches: [ "master" ]

  workflow_dispatch:
    inputs:
      javaVersion:
        description: "Java version to use"
        required: true
        options: ["8", "11", "17", "22"]
        default: "11"
      javaDistribution:
        description: "Java distribution to use"
        options: ["temurin", "microsoft"]
        required: true
        default: "temurin"

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      checks: write

    steps:
      - uses: actions/checkout@v4.1.2

      - name: Check system java version
        run: java -version

      - name: Print environment variables
        run: printenv

      - name: Set JAVA_HOME and update PATH
        id: set-java-home
        uses: actions/github-script@v7.0.1
        with:
          script: |
            const javaVersion = '${{ github.event.inputs.javaVersion || '17' }}';
            const javaDistribution = '${{ github.event.inputs.javaDistribution || 'temurin' }}';
            const javaHomeEnv = `JAVA_HOME_${javaVersion}_X64`;
            const javaHome = process.env[javaHomeEnv];

            console.log(`javaHomeEnv: ${javaHomeEnv}`);
            console.log(`javaHome: ${javaHome}`);

            if (javaHome && javaHome.includes(javaDistribution)) {
              process.env.JAVA_HOME = javaHome;
              process.env.PATH = `${javaHome}/bin:${process.env.PATH}`;
              console.log(`JAVA_HOME set to ${javaHome}`);
              console.log(`PATH updated to include ${javaHome}/bin`);
              return { javaHomeSet: true };
            } else {
              console.log(`No matching JAVA_HOME found for version ${javaVersion} and distribution ${javaDistribution}`);
              return { javaHomeSet: false };
            }

      - name: Print JAVA_HOME and PATH
        run: |
          echo "JAVA_HOME: $JAVA_HOME"
          echo "PATH: $PATH"

      - name: Check system java version
        if: steps.set-java-home.outputs.javaHomeSet == 'true'
        run: java -version

      - name: Print environment variables
        if: steps.set-java-home.outputs.javaHomeSet == 'true'
        run: printenv

      - name: Set up JDK with actions/setup-java
        if: steps.set-java-home.outputs.javaHomeSet == 'false'
        uses: actions/setup-java@v4
        with:
          java-version: ${{ github.event.inputs.javaVersion }}
          distribution: ${{ github.event.inputs.javaDistribution }}
          cache: maven

      - name: Check system java version after setup
        if: steps.set-java-home.outputs.javaHomeSet == 'false'
        run: java -version

    # - name: Set up JDK 17
    #   uses: actions/setup-java@v3
    #   with:
    #     java-version: '17'
    #     distribution: 'temurin'
    #     cache: maven
    # - name: Build with Maven
    #   run: mvn test
    #run: mvn -B package --file pom.xml
