
name: test-reporter
on:
  workflow_dispatch:
  #push:
  #  branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: write
  checks: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
#    environment:
#      name: github-pages
#      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    steps:
      - run: echo ${{ steps.deployment.outputs.page_url }}
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn clean test
        #run: mvn -B package --file pom.xml



      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: |
            **/target/logs/*
            **/target/reports/*

          #  ./target/logs/
          #  .target/reports/
          #  ./target/surefire-reports/

      - name: Upload surefire test reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: surefire-test-reports
          path: |
            **/target/surefire-reports/**/*

          #  ./target/surefire-reports/TEST*.xml

      - name: Publish Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure() # always run even if the previous step fails
        with:
          name: Test Report
          reporter: java-junit
          only-summary: false
          list-suites: all
          list-tests: all
          fail-on-error: false
          path: '**/target/surefire-reports/TEST-*.xml'

        #   path: '**/target/surefire-reports/junitreports/TEST-*.xml'

     # - name: Setup Pages
     #   uses: actions/configure-pages@v3
     
      - name: Upload artifact for github page
        uses: actions/upload-pages-artifact@v2
        if: always()
        with:
          name: 'github-pages'
          path: '/target/reports/'
          retention-days: 1

  deploy:
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        if: always()
        id: deployment
        uses: actions/deploy-pages@v2

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    #- name: Update dependency graph
    #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
