
name: test-reporter
on:
  workflow_dispatch:
  #push:
  #  branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: write
  checks: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  buildTest:
#    environment:
#      name: github-pages
#      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    steps:
      - run: echo ${{ steps.deployment.outputs.page_url }}
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn clean test
        #run: mvn -B package --file pom.xml



      - name: Upload test reports
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: |
            **/target/logs/*
            **/target/reports/*

          #  ./target/logs/
          #  .target/reports/
          #  ./target/surefire-reports/

      - name: Upload surefire test reports
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: surefire-test-reports
          path: |
            **/target/surefire-reports/**/*

          #  ./target/surefire-reports/TEST*.xml

      - name: Publish Test Report
        id: publish_report
        uses: dorny/test-reporter@v1
        if: success() || failure() # always run even if the previous step fails
        with:
          name: Test Report
          reporter: java-junit
          only-summary: false
          list-suites: all
          list-tests: all
          fail-on-error: false
          path: '**/target/surefire-reports/junitreports/TEST-*.xml'

        #  path: '**/target/surefire-reports/TEST-*.xml'

      - name: Print Test Report Output
        if: success() || failure()
        run: |
          echo "url: ${{ steps.publish_report.outputs.url }}"
          echo "url_html: ${{ steps.publish_report.outputs.url_html }}"
          echo "Passed count: ${{ steps.publish_report.outputs.passed }}"
          echo "Failed count: ${{ steps.publish_report.outputs.failed }}"
          echo "Skipped count: ${{ steps.publish_report.outputs.skipped }}"
          echo "Execution time ms: ${{ steps.publish_report.outputs.time }}"      

      - name: CALCULATION
        if: success() || failure()
        run: |
          numa=1
          numb=2
          numc=$((numa + numb))
          echo "numc = $numc"
          
      - name: Test Results Summary
        id: test_summary
        if: success() || failure()
        run: |
          passed=${{ steps.publish_report.outputs.passed }}
          failed=${{ steps.publish_report.outputs.failed }}
          skipped= ${{ steps.publish_report.outputs.skipped }}
          total=$((passed+failed+skipped))
          echo "### Test Results Summary :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY # this is a blank line          
          echo "Total: $total" >> $GITHUB_STEP_SUMMARY
          echo ":heavy_check_mark: Passed: ${{ steps.publish_report.outputs.passed }} " >> $GITHUB_STEP_SUMMARY
          echo ":x: Failed: ${{ steps.publish_report.outputs.failed }}" >> $GITHUB_STEP_SUMMARY
          echo ":white_circle: Skipped: ${{ steps.publish_report.outputs.skipped }}" >> $GITHUB_STEP_SUMMARY
          echo "Execution time (ms): ${{ steps.publish_report.outputs.time }}" >> $GITHUB_STEP_SUMMARY
          
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
        if: success() || failure()

      - name: Print Setup Pages Output
        if: success() || failure()
        run: |
          echo "base_url: ${{ steps.pages.outputs.base_url }}"
          echo "origin: ${{ steps.pages.outputs.origin }}"
          echo "host: ${{ steps.pages.outputs.host }}"
          echo "base_path ${{ steps.pages.outputs.base_path }}"

      - name: Prepare files for Github pages
        if: success() || failure()
        run: |
          mkdir -p $GITHUB_WORKSPACE/_site/$GITHUB_RUN_ID
          cp -r target/reports $GITHUB_WORKSPACE/_site/$GITHUB_RUN_ID
          cp -r target/surefire-reports $GITHUB_WORKSPACE/_site/$GITHUB_RUN_ID
        working-directory: ${{ github.workspace }}
     
      - name: Upload artifact for github page
        id: github_page_artifact
        uses: actions/upload-pages-artifact@v2
        if: success() || failure()
        with:
          name: 'github-pages'
          path: '${{ github.workspace }}/_site/'
          retention-days: 1          
    outputs:
      github_page_artifact_output: ${{ steps.github_page_artifact.outcome }}
      
  deployReport:
    if: |
      (${{ success() }} || ${{ failure() }}) 
      && needs.buildTest.outputs.github_page_artifact_output == 'success'
    needs: buildTest
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
    #    if: needs.buildTest.outputs.github_page_artifact_output == 'success'
        id: deployment
        uses: actions/deploy-pages@v2

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    #- name: Update dependency graph
    #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
